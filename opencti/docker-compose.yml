version: "3.8"
services:
  # RSA key generator voor XTM Composer (onderdeel van standaard stack)
  rsa-key-generator:
    image: alpine/openssl:3.5.2
    volumes:
      - rsakeys:/keys
    entrypoint: ["/bin/ash"]
    command:
      [
        "-c",
        "if [ ! -f /keys/private_key.pem ]; then openssl genpkey -algorithm RSA -out /keys/private_key.pem -pkeyopt rsa_keygen_bits:4096; fi && tail -f /dev/null",
      ]
    healthcheck:
      test: ["CMD", "test", "-f", "/keys/private_key.pem"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always

  redis:
    image: redis:8.2.1
    restart: always
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.19.2
    restart: always
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.ml.enabled=false
      - xpack.security.enabled=false
      - thread_pool.search.queue_size=5000
      - ES_JAVA_OPTS=-Xms${ELASTIC_MEMORY_SIZE} -Xmx${ELASTIC_MEMORY_SIZE}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://elasticsearch:9200/_cluster/health?wait_for_status=yellow >/dev/null || exit 1",
        ]
      interval: 5s
      timeout: 3s
      retries: 50

  minio:
    image: minio/minio:RELEASE.2025-06-13T11-33-47Z
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
    volumes:
      - s3data:/data
    command: server /data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 3

  rabbitmq:
    image: rabbitmq:4.1-management
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_NODENAME=rabbit01@localhost
    volumes:
      - type: bind
        source: ./rabbitmq.conf
        target: /etc/rabbitmq/rabbitmq.conf
      - amqpdata:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  opencti:
    image: opencti/platform:6.8.8
    restart: always
    environment:
      - NODE_OPTIONS=--max-old-space-size=8096
      - APP__PORT=8080
      - APP__BASE_URL=${OPENCTI_BASE_URL}
      - APP__ADMIN__EMAIL=${OPENCTI_ADMIN_EMAIL}
      - APP__ADMIN__PASSWORD=${OPENCTI_ADMIN_PASSWORD}
      - APP__ADMIN__TOKEN=${OPENCTI_ADMIN_TOKEN}
      - APP__APP_LOGS__LOGS_LEVEL=error
      - REDIS__HOSTNAME=redis
      - REDIS__PORT=6379
      - ELASTICSEARCH__URL=http://elasticsearch:9200
      - ELASTICSEARCH__NUMBER_OF_REPLICAS=0
      - MINIO__ENDPOINT=minio
      - MINIO__PORT=9000
      - MINIO__USE_SSL=false
      - MINIO__ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO__SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - RABBITMQ__HOSTNAME=rabbitmq
      - RABBITMQ__PORT=5672
      - RABBITMQ__PORT_MANAGEMENT=15672
      - RABBITMQ__MANAGEMENT_SSL=false
      - RABBITMQ__USERNAME=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ__PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - SMTP__HOSTNAME=${SMTP_HOSTNAME}
      - SMTP__PORT=25
      - PROVIDERS__LOCAL__STRATEGY=LocalStrategy
      - APP__HEALTH_ACCESS_KEY=${OPENCTI_HEALTHCHECK_ACCESS_KEY}
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      minio:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-qO-",
          "http://opencti:8080/health?health_access_key=${OPENCTI_HEALTHCHECK_ACCESS_KEY}",
        ]
      interval: 10s
      timeout: 5s
      retries: 20

  worker:
    image: opencti/worker:6.8.8
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - WORKER_LOG_LEVEL=info
    depends_on:
      opencti:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 3

  # === Interne export/import connectors (officieel, laten staan) ===
  connector-export-file-stix:
    image: opencti/connector-export-file-stix:6.8.8
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_EXPORT_FILE_STIX_ID}
      - CONNECTOR_TYPE=INTERNAL_EXPORT_FILE
      - CONNECTOR_NAME=ExportFileStix2
      - CONNECTOR_SCOPE=application/json
      - CONNECTOR_LOG_LEVEL=info
    depends_on:
      opencti:
        condition: service_healthy

  connector-export-file-csv:
    image: opencti/connector-export-file-csv:6.8.8
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_EXPORT_FILE_CSV_ID}
      - CONNECTOR_TYPE=INTERNAL_EXPORT_FILE
      - CONNECTOR_NAME=ExportFileCsv
      - CONNECTOR_SCOPE=text/csv
      - CONNECTOR_LOG_LEVEL=info
    depends_on:
      opencti:
        condition: service_healthy

  connector-export-file-txt:
    image: opencti/connector-export-file-txt:6.8.8
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_EXPORT_FILE_TXT_ID}
      - CONNECTOR_TYPE=INTERNAL_EXPORT_FILE
      - CONNECTOR_NAME=ExportFileTxt
      - CONNECTOR_SCOPE=text/plain
      - CONNECTOR_LOG_LEVEL=info
    depends_on:
      opencti:
        condition: service_healthy

  connector-import-file-stix:
    image: opencti/connector-import-file-stix:6.8.8
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_IMPORT_FILE_STIX_ID}
      - CONNECTOR_TYPE=INTERNAL_IMPORT_FILE
      - CONNECTOR_NAME=ImportFileStix
      - CONNECTOR_VALIDATE_BEFORE_IMPORT=true
      - CONNECTOR_SCOPE=application/json,text/xml
      - CONNECTOR_AUTO=true
      - CONNECTOR_LOG_LEVEL=info
    depends_on:
      opencti:
        condition: service_healthy

  connector-import-document:
    image: opencti/connector-import-document:6.8.8
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_IMPORT_DOCUMENT_ID}
      - CONNECTOR_TYPE=INTERNAL_IMPORT_FILE
      - CONNECTOR_NAME=ImportDocument
      - CONNECTOR_VALIDATE_BEFORE_IMPORT=true
      - CONNECTOR_SCOPE=application/pdf,text/plain,text/html
      - CONNECTOR_AUTO=true
      - CONNECTOR_ONLY_CONTEXTUAL=false
      - CONNECTOR_LOG_LEVEL=info
      - IMPORT_DOCUMENT_CREATE_INDICATOR=true
    depends_on:
      opencti:
        condition: service_healthy

  connector-analysis:
    image: opencti/connector-import-document:6.8.8
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_ANALYSIS_ID}
      - CONNECTOR_TYPE=INTERNAL_ANALYSIS
      - CONNECTOR_NAME=ImportDocumentAnalysis
      - CONNECTOR_VALIDATE_BEFORE_IMPORT=false
      - CONNECTOR_SCOPE=application/pdf,text/plain,text/html
      - CONNECTOR_AUTO=true
      - CONNECTOR_ONLY_CONTEXTUAL=false
      - CONNECTOR_LOG_LEVEL=info
    depends_on:
      opencti:
        condition: service_healthy

  # === JOUW CONNECTORS ===

  # AlienVault OTX (EXTERNAL_IMPORT)
  connector-alienvault:
    image: opencti/connector-alienvault:6.8.8
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      # TIP: maak in OpenCTI een aparte 'Connector user' en token
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_ALIENVAULT_ID}
      - CONNECTOR_NAME=AlienVault
      - CONNECTOR_SCOPE=alienvault
      - CONNECTOR_LOG_LEVEL=info
      - ALIENVAULT_CREATE_OBSERVABLES=true
      - ALIENVAULT_CREATE_INDICATORS=true
      - CONNECTOR_CONFIDENCE_LEVEL=15
      # Interval (ISO8601): elke 30 min (zoals voorbeeld van OpenCTI)
      - CONNECTOR_DURATION_PERIOD=PT30M
      # OTX-specifiek
      - ALIENVAULT_BASE_URL=https://otx.alienvault.com
      - ALIENVAULT_API_KEY=${ALIENVAULT_API_KEY}
      - ALIENVAULT_TLP=White
      # Start vanaf (let op dat dit veel data kan zijn)
      - ALIENVAULT_PULSE_START_TIMESTAMP=2025-10-01T00:00:00
      - ALIENVAULT_REPORT_TYPE=threat-report
      - ALIENVAULT_REPORT_STATUS=New
      - ALIENVAULT_GUESS_MALWARE=false
      - ALIENVAULT_ENABLE_RELATIONSHIPS=true
      - ALIENVAULT_ENABLE_ATTACK_PATTERNS_INDICATES=true
      - ALIENVAULT_GUESS_CVE=false
      - ALIENVAULT_EXCLUDED_PULSE_INDICATOR_TYPES=FileHash-MD5,FileHash-SHA1

    depends_on:
      opencti:
        condition: service_healthy

  # CISA Known Exploited Vulnerabilities (EXTERNAL_IMPORT)
  connector-cisa-known-exploited-vulnerabilities:
    image: opencti/connector-cisa-known-exploited-vulnerabilities:6.8.8
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      # TIP: maak voor elke connector een eigen token/user aan
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_CISA_KEV_ID}
      - CONNECTOR_NAME=CISA Known Exploited Vulnerabilities
      - CONNECTOR_SCOPE=cisa-known-exploited-vulnerabilities
      - CONNECTOR_LOG_LEVEL=info
      # Optioneel: periodiek draaien (veel connectors ondersteunen ISO8601)
      - CONNECTOR_DURATION_PERIOD=PT24H
    depends_on:
      opencti:
        condition: service_healthy

  connector-threatfox:
    image: opencti/connector-threatfox:rolling
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=4488a55a-8a09-4fa5-bca7-b9bee5f18da5
      - CONNECTOR_NAME=Abuse.ch ThreatFox
      - CONNECTOR_SCOPE=threatfox
      - CONNECTOR_LOG_LEVEL=info

  connector-urlhaus:
    image: opencti/connector-urlhaus:rolling
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_TOKEN}
      - CONNECTOR_ID=5fd31fc6-52aa-4f00-bc04-cf1e77dd074b
      - CONNECTOR_NAME=Abuse.ch URLHaus
      - CONNECTOR_SCOPE=urlhaus
      - CONNECTOR_LOG_LEVEL=info

  connector-cve:
    image: opencti/connector-cve:6.8.8
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_CVE_ID}
      - CONNECTOR_NAME=Common Vulnerabilities and Exposures
      - CONNECTOR_SCOPE=vulnerability
      # --- NVD API ---
      - CVE_API_KEY=${NVD_API_KEY} # <-- REQUIRED
      # (optional) tuning:
      - CVE_INTERVAL=2 # poll every 2h
      - CVE_MAX_DATE_RANGE=100 # days per request (<=120)
      - CVE_PULL_HISTORY=true
      - CVE_HISTORY_START_YEAR=2019
      - CONNECTOR_LOG_LEVEL=info

  connector-cisa-kev:
    image: opencti/connector-cisa-known-exploited-vulnerabilities:rolling
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_TOKEN}
      - CONNECTOR_ID=c075d5e8-6166-4fd5-9c85-27c425f77002
      - CONNECTOR_NAME=CISA KEV
      - CONNECTOR_SCOPE=vulnerability
      - CONNECTOR_LOG_LEVEL=info

  connector-mitre:
    image: opencti/connector-mitre:rolling
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_TOKEN}
      - CONNECTOR_ID=26b76b37-7b6c-41e5-bc8f-aa464583b6fa
      - CONNECTOR_NAME=MITRE Datasets
      - CONNECTOR_SCOPE=identity,attack-pattern,intrusion-set,malware,tool,course-of-action
      - CONNECTOR_LOG_LEVEL=info

  # XTM Composer (connector manager) uit het standaard compose (mag blijven)
  xtm-composer:
    image: filigran/xtm-composer:1.0.0
    platform: linux/amd64
    restart: always
    environment:
      - MANAGER__ID=${XTM_COMPOSER_ID}
      - MANAGER__NAME=OpenCTI Connector Manager
      - MANAGER__CREDENTIALS_KEY_FILEPATH=/keys/private_key.pem
      - OPENCTI__ENABLE=true
      - OPENCTI__URL=http://opencti:8080
      - OPENCTI__TOKEN=${OPENCTI_ADMIN_TOKEN}
      - OPENCTI__DAEMON__SELECTOR=docker
      - OPENCTI__DAEMON__DOCKER__NETWORK_MODE=${COMPOSE_PROJECT_NAME}_default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - rsakeys:/keys:ro
    depends_on:
      rsa-key-generator:
        condition: service_healthy
      opencti:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  connector-stopforumspam:
    image: opencti/connector-stopforumspam:rolling
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_STOPFORUMSPAM_ID}
      - CONNECTOR_NAME=StopForumSpam
      - CONNECTOR_SCOPE=stopforumspam
      - CONNECTOR_LOG_LEVEL=info

  connector-abuse-ssl:
    image: opencti/connector-abuse-ssl:6.8.8
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_ABUSE_SSL_ID}
      - CONNECTOR_NAME=Abuse.ch SSLBL
      - CONNECTOR_SCOPE=abusessl
      - ABUSESSL_URL=https://sslbl.abuse.ch/blacklist/sslipblacklist.csv
      - ABUSESSL_INTERVAL=360
      - CONNECTOR_LOG_LEVEL=info

  connector-urlhaus-recent-payloads:
    image: opencti/connector-urlhaus-recent-payloads:rolling
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_URLHAUS_RECENT_ID}
      - CONNECTOR_NAME=URLHaus Recent Payloads
      - CONNECTOR_SCOPE=urlhaus_recent_payloads
      - CONNECTOR_LOG_LEVEL=info
      - URLHAUS_RECENT_PAYLOADS_API_KEY=${URLHAUS_API_KEY} # <-- required
      - URLHAUS_RECENT_PAYLOADS_COOLDOWN_SECONDS=300
  connector-ransomwarelive:
    image: opencti/connector-ransomwarelive:6.8.8
    restart: always
    environment:
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN} # create a dedicated connector token if possible
      - CONNECTOR_ID=${CONNECTOR_RANSOMWARELIVE_ID} # set a UUID for this connector
      - CONNECTOR_NAME=RansomwareLive
      - CONNECTOR_SCOPE=ransomwarelive
      - CONNECTOR_LOG_LEVEL=info
      # ransomware.live API key (get one here: https://my.ransomware.live)
      - RANSOMWARELIVE_API_KEY=${RANSOMWARELIVE_API_KEY}
      # Optional tuning:
      - CONNECTOR_DURATION_PERIOD=PT1H # how often to poll; ISO8601 (example: PT1H = every hour)
      - RANSOMWARELIVE_START_DAYS=7 # example: limit history to last 7 days on first run (check README)
    depends_on:
      opencti:
        condition: service_healthy

volumes:
  esdata:
  s3data:
  redisdata:
  amqpdata:
  rsakeys:
